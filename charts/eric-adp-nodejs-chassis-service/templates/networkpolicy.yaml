{{- if .Values.global -}}
{{- if and .Values.global.networkPolicy .Values.networkPolicy -}}
{{- if and .Values.global.networkPolicy.enabled .Values.networkPolicy.enabled -}}
{{- $isApiNetworkingV1 := (and (semverCompare ">=1.18" .Capabilities.KubeVersion.Version) (.Capabilities.APIVersions.Has "networking.k8s.io/v1")) }}
{{- if $isApiNetworkingV1 }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "eric-adp-nodejs-chassis-service.name" . }}
  annotations:
    {{- include "eric-adp-nodejs-chassis-service.annotations" . | nindent 4 }}
  labels:
    {{- include "eric-adp-nodejs-chassis-service.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ template "eric-adp-nodejs-chassis-service.name" . }}
  policyTypes:
  - Ingress
  ingress:
  # ALLOW traffic from external clients
  - from:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - port: 3000
      protocol: TCP
    {{- if .Values.authorizationProxy.enabled -}}
    - port: 8080
      protocol: TCP
    {{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}
