# Global settings
# global:
#   security:
#     tls:
#       enabled: true
#     policyBinding:
#       create: false
#     policyReferenceMap:
#       default-restricted-security-policy: customer-z-restricted
#   registry:
#     repoPath:
#     url: armdocker.rnd.ericsson.se # see default in eric-product-info.yaml
#   nodeSelector: {}
#   pullSecret:
#   timezone: UTC

# Generic Service settings enforced by Desing Rules
annotations: {}

labels: {}

nodeSelector: {}

podDisruptionBudget:
  minAvailable: 1

affinity:
  podAntiAffinity: "soft"

terminationGracePeriodSeconds: 30

tolerations: []

topologySpreadConstraints: []

# Ingress configuration
ingress:
  enabled: false
  useContour: false
  path: /
  hostname:
  ingressClass:
  adpIccrCaSecret:
  adpIccrServiceName: eric-tm-ingress-controller-cr
  tls:
    passthrough: false
    enabled: true
    existingSecret:
  certificates:
    asymmetricKeyCertificateName: chassis-http-server

networkPolicy:
  enabled: true

productInfo:
  rstate: RSTATE

imageCredentials:
  repoPath: # overrides repoPath from eric-product-info.yaml
  main:
    repoPath: # see default in eric-product-info.yaml
    registry:
      url: # see default in eric-product-info.yaml
  # secret must be manually created in the namespace, no default value
  #pullSecret:

# Performance Monitoring
metrics:
  enabled: true

# Service config
service:
  type: ClusterIP
  port: 3000
  targetPort: 3000
  endpoints:
    http:
      tls:
        # Currently it is not supported to use https without enforcing it.
        enforced: required
        # Global TLS must be enabled if this is set to required.
        verifyClientCertificate: required

# Deployment options
replicaCount: 2

## Using RollingUpdate, specify the update strategy for statefulset
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    partition: 0
    maxUnavailable: 25%
    maxSurge: 25%

# Dimensioning + auth resources
resources:
  main:
    limits:
      cpu: 500m
      memory: 150Mi
      ephemeral-storage: "100Mi"
    requests:
      cpu: 250m
      memory: 150Mi
      ephemeral-storage: "100Mi"
  ericsecoauthsap:
    requests:
      cpu: "50m"
      memory: "130Mi"
      ephemeral-storage: "100Mi"
    limits:
      cpu: "50m"
      memory: "130Mi"
      ephemeral-storage: "100Mi"
  ericsecoauthproxy:
    limits:
      cpu: 2000m
      memory: 500Mi
      ephemeral-storage: "100Mi"
    requests:
      cpu: 500m
      memory: 250Mi
      ephemeral-storage: "100Mi"

podPriority:
  main:
    priorityClassName: ""

probes:
  main:
    livenessProbe:
      initialDelaySeconds: 20
      timeoutSeconds: 1
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      initialDelaySeconds: 30
      timeoutSeconds: 1
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3

# Chassis Specific configuration
configuration:
  # In case of the authz proxy is disabled,
  # then this parameter could be used to set the whole logout url
  logoutURL:
  # In case of the authz proxy is disabled,
  # then this parameter could be used to set the whole url to the User Account editor
  userAccountURL:
  logging:
    enabled: true
    defaultLogLevel: info
    serviceName: eric-adp-chassis
    stdout:
      enabled: true
    filelog:
      enabled: false
    syslog:
      enabled: true
      syslogHost: eric-log-transformer
      syslogFacility: local0

  faultIndications:
    enabled: false

  loggingLicenses:
    enabled: false
  discoverIngress: false
  dependencies:
    prometheus:
      appName: eric-adp-chassis
    faultHandler:
      hostname: eric-fh-alarm-handler
      tlsPort: 6006
      httpPort: 6005
      serviceName: eric-adp-nodejs-chassis-service
    licenseManager:
      tlsPort: 18326
      httpPort: 8080
      host: eric-lm-combined-server
      productType: Expert_Analytics
      licenses:
        - keyId: FAT1024238/1
          type: CAPACITY_CUMULATIVE

# Portal (UI) specific configs
uiconfig:
  logging:
    logLevel: info

# Auth Proxy
authorizationProxy:
  enabled: false
  sipoauth2:
    enabled: true
  authnProxyFQDN:
  keycloakFQDN:
  localSpPort: 3000 ## The port number of service provider's service in localhost where authorization proxy forwards the authorized HTTP requests
  adpIamServiceName: eric-sec-access-mgmt ## defaults
  adpIamServicePort: 8443
  adpIamRealm: oam
  numOfWebServerWorkers: 10
  adpIamAdminSecret: eric-eea-iam-pg-usersecrets
  localSpClientCertVolumeName: authz-client-cert
  # In case of own ICCR and mTLS, overwrite this:
  adpIccrServiceName: eric-tm-ingress-controller-cr
  protectedPaths:
    - /ui
    - /api
    - /metrics
  authorizationRules: |
    roles:
    - name: all-in-one-chassis
    resources:
    - name: all-in-one-chassis
      uris:
      - /**
    permissions:
    - name: all-in-one-permission
      config:
        resources:        ["all-in-one-chassis"]
        operations:       ["GET","HEAD","POST","PUT","DELETE","CONNECT","OPTIONS","TRACE"]
        roles:            ["all-in-one-chassis"]
